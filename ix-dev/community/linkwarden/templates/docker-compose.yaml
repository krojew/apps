{% set tpl = ix_lib.base.render.Render(values) %}

{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}

{% set cl = tpl.add_container(values.consts.linkwarden_container_name, "image") %}
{% set cm = tpl.add_container(values.consts.meilisearch_container_name, "meilisearch") %}

{% set pg_config = {
  "user": values.consts.db_user,
  "password": values.linkwarden.db_password,
  "database": values.consts.db_name,
  "volume": values.storage.postgres_data,
} %}
{% set postgres = tpl.deps.postgres(
  values.consts.postgres_container_name,
  values.linkwarden.postgres_image_selector,
  pg_config, perm_container
) %}

{% do cl.set_user(values.run_as.user, values.run_as.group) %}
{% do cm.set_user(values.run_as.user, values.run_as.group) %}

{% do cl.depends.add_dependency(values.consts.postgres_container_name, "service_healthy") %}
{% do cl.depends.add_dependency(values.consts.meilisearch_container_name, "service_healthy") %}

{% do cl.healthcheck.set_test("curl", {"port": values.consts.internal_web_port}) %}
{% do cm.healthcheck.set_test("curl", {"port": values.consts.meilisearch_port, "path": "/health"}) %}

{% do cl.environment.add_env("DATABASE_URL", "postgresql://%s:%s@%s:5432/%s"|format(
  values.consts.db_user, values.linkwarden.db_password, values.consts.postgres_container_name, values.consts.db_name)) %}
{% do cl.environment.add_env("NEXTAUTH_SECRET", values.linkwarden.nextauth_secret) %}
{% do cl.environment.add_env("NEXTAUTH_URL", "http://localhost/api/v1/auth") %}
{% do cl.environment.add_env("MEILI_MASTER_KEY", values.linkwarden.meilisearch_master_key) %}
{% do cl.environment.add_env("MEILI_HOST", "http://%s:%d"|format(
  values.consts.meilisearch_container_name, values.consts.meilisearch_port)) %}
{% do cm.environment.add_env("MEILI_MASTER_KEY", values.linkwarden.meilisearch_master_key) %}
{% do cl.environment.add_user_envs(values.linkwarden.additional_envs) %}

{% do cl.add_port(values.network.web_port) %}

{% do cl.add_storage("/data/data", values.storage.data) %}
{% do cm.add_storage("/meili_data", values.storage.meili_data) %}

{% for store in values.storage.additional_storage %}
  {% do cl.add_storage(store.mount_path, store) %}
{% endfor %}

{% set perms_config = {"uid": values.run_as.user, "gid": values.run_as.group, "mode": "check"} %}

{% do perm_container.add_or_skip_action("linkwarden-data", values.storage.data, perms_config) %}
{% do perm_container.add_or_skip_action("meili-data", values.storage.meili_data, perms_config) %}

{% if perm_container.has_actions() %}
  {% do perm_container.activate() %}
  {% do cl.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do postgres.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
  {% do cm.depends.add_dependency(values.consts.perms_container_name, "service_completed_successfully") %}
{% endif %}

{% do tpl.portals.add(values.network.web_port) %}

{{ tpl.render() | tojson }}
